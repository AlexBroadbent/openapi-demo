/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/city/{id}": {
    /**
     * Get City
     * @description Get a city given an ID
     */
    get: operations["getCity"];
  };
  "/_health": {
    /**
     * Get Health Check Status
     * @description Returns the health check for the service
     */
    get: operations["getHealthCheck"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Health Check Result */
    HealthCheckResult: {
      ok: boolean;
    };
    /** Error Model */
    ErrorModel: {
      status: number;
      message: string;
    };
    /** City */
    City: {
      id: string;
      name: string;
      country: string;
    };
  };
  responses: {
    GetCity: components["responses"]["City"];
    GetHealthCheck: components["responses"]["HealthCheck"];
    ErrorResponse: components["responses"]["ErrorModel"];
    /** @description Returns health check result */
    ErrorModel: {
      content: {
        "application/json": {
          data: components["schemas"]["ErrorModel"];
        };
      };
    };
    /** @description Returns city result */
    City: {
      content: {
        "application/json": {
          data: components["schemas"]["City"];
        };
      };
    };
    /** @description Returns health check result */
    HealthCheck: {
      content: {
        "application/json": {
          data: components["schemas"]["HealthCheckResult"];
        };
      };
    };
  };
  parameters: {
    /** @description Identifier */
    PathCityID: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get City
   * @description Get a city given an ID
   */
  getCity: {
    parameters: {
      path: {
        id: components["parameters"]["PathCityID"];
      };
    };
    responses: {
      200: components["responses"]["City"];
      /** Not Found */
      404: components["responses"]["ErrorModel"];
      default: components["responses"]["ErrorModel"];
    };
  };
  /**
   * Get Health Check Status
   * @description Returns the health check for the service
   */
  getHealthCheck: {
    responses: {
      200: components["responses"]["HealthCheck"];
      /** Unauthorized */
      401: components["responses"]["ErrorModel"];
      default: components["responses"]["ErrorModel"];
    };
  };
}
